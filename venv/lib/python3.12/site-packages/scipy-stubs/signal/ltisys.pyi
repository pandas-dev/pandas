# This module is not meant for public use and will be removed in SciPy v2.0.0.
from typing import Self
from typing_extensions import deprecated

from .filter_design import freqs, freqs_zpk, freqz, freqz_zpk, normalize, tf2zpk, zpk2tf
from .lti_conversion import abcd_normalize, cont2discrete, ss2tf, ss2zpk, tf2ss, zpk2ss

__all__ = [
    "StateSpace",
    "TransferFunction",
    "ZerosPolesGain",
    "abcd_normalize",
    "bode",
    "cont2discrete",
    "dbode",
    "dfreqresp",
    "dimpulse",
    "dlsim",
    "dlti",
    "dstep",
    "freqresp",
    "freqs",
    "freqs_zpk",
    "freqz",
    "freqz_zpk",
    "impulse",
    "lsim",
    "lti",
    "normalize",
    "place_poles",
    "ss2tf",
    "ss2zpk",
    "step",
    "tf2ss",
    "tf2zpk",
    "zpk2ss",
    "zpk2tf",
]

@deprecated("will be removed in SciPy v2.0.0")
class StateSpace:
    __array_priority__: object
    __array_ufunc__: object
    def __new__(cls, *system: object, **kwargs: object) -> Self: ...
    def __init__(self, /, *system: object, **kwargs: object) -> None: ...
    def __mul__(self, /, other: object) -> object: ...
    def __rmul__(self, /, other: object) -> object: ...
    def __neg__(self, /) -> object: ...
    def __add__(self, /, other: object) -> object: ...
    def __sub__(self, /, other: object) -> object: ...
    def __radd__(self, /, other: object) -> object: ...
    def __rsub__(self, /, other: object) -> object: ...
    def __truediv__(self, /, other: object) -> object: ...
    @property
    def A(self, /) -> object: ...
    @A.setter
    def A(self, /, A: object) -> None: ...
    @property
    def B(self, /) -> object: ...
    @B.setter
    def B(self, /, B: object) -> None: ...
    @property
    def C(self, /) -> object: ...
    @C.setter
    def C(self, /, C: object) -> None: ...
    @property
    def D(self, /) -> object: ...
    @D.setter
    def D(self, /, D: object) -> None: ...
    def to_tf(self, /, **kwargs: object) -> object: ...
    def to_zpk(self, /, **kwargs: object) -> object: ...
    def to_ss(self, /) -> object: ...

@deprecated("will be removed in SciPy v2.0.0")
class TransferFunction:
    def __new__(cls, *system: object, **kwargs: object) -> Self: ...
    def __init__(self, /, *system: object, **kwargs: object) -> None: ...
    @property
    def num(self, /) -> object: ...
    @num.setter
    def num(self, /, num: object) -> None: ...
    @property
    def den(self, /) -> object: ...
    @den.setter
    def den(self, /, den: object) -> None: ...
    def to_tf(self, /) -> object: ...
    def to_zpk(self, /) -> object: ...
    def to_ss(self, /) -> object: ...

@deprecated("will be removed in SciPy v2.0.0")
class ZerosPolesGain:
    def __new__(cls, *system: object, **kwargs: object) -> Self: ...
    def __init__(self, /, *system: object, **kwargs: object) -> None: ...
    @property
    def zeros(self, /) -> object: ...
    @zeros.setter
    def zeros(self, /, zeros: object) -> None: ...
    @property
    def poles(self, /) -> object: ...
    @poles.setter
    def poles(self, /, poles: object) -> None: ...
    @property
    def gain(self, /) -> object: ...
    @gain.setter
    def gain(self, /, gain: object) -> None: ...
    def to_tf(self, /) -> object: ...
    def to_zpk(self, /) -> object: ...
    def to_ss(self, /) -> object: ...

@deprecated("will be removed in SciPy v2.0.0")
class lti:
    def __new__(cls, *system: object) -> Self: ...
    def __init__(self, /, *system: object) -> None: ...
    def impulse(self, /, X0: object = ..., T: object = ..., N: object = ...) -> object: ...
    def step(self, /, X0: object = ..., T: object = ..., N: object = ...) -> object: ...
    def output(self, /, U: object, T: object, X0: object = ...) -> object: ...
    def bode(self, /, w: object = ..., n: object = ...) -> object: ...
    def freqresp(self, /, w: object = ..., n: object = ...) -> object: ...
    def to_discrete(self, /, dt: object, method: object = ..., alpha: object = ...) -> object: ...

@deprecated("will be removed in SciPy v2.0.0")
class dlti:
    def __new__(cls, *system: object, **kwargs: object) -> Self: ...
    def __init__(self, /, *system: object, **kwargs: object) -> None: ...
    @property
    def dt(self, /) -> object: ...
    @dt.setter
    def dt(self, /, dt: object) -> None: ...
    def impulse(self, /, x0: object = ..., t: object = ..., n: object = ...) -> object: ...
    def step(self, /, x0: object = ..., t: object = ..., n: object = ...) -> object: ...
    def output(self, /, u: object, t: object, x0: object = ...) -> object: ...
    def bode(self, /, w: object = ..., n: object = ...) -> object: ...
    def freqresp(self, /, w: object = ..., n: object = ..., whole: object = ...) -> object: ...

@deprecated("will be removed in SciPy v2.0.0")
def lsim(system: object, U: object, T: object, X0: object = ..., interp: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def impulse(system: object, X0: object = ..., T: object = ..., N: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def step(system: object, X0: object = ..., T: object = ..., N: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def bode(system: object, w: object = ..., n: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def freqresp(system: object, w: object = ..., n: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def place_poles(
    A: object, B: object, poles: object, method: object = ..., rtol: object = ..., maxiter: object = ...
) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def dlsim(system: object, u: object, t: object = ..., x0: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def dimpulse(system: object, x0: object = ..., t: object = ..., n: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def dstep(system: object, x0: object = ..., t: object = ..., n: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def dfreqresp(system: object, w: object = ..., n: object = ..., whole: object = ...) -> object: ...
@deprecated("will be removed in SciPy v2.0.0")
def dbode(system: object, w: object = ..., n: object = ...) -> object: ...
