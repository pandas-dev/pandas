from _typeshed import Incomplete
from collections.abc import Callable
from typing import Final, TypeAlias

###

_Incomplete2: TypeAlias = tuple[Incomplete, Incomplete]
_Incomplete3: TypeAlias = tuple[Incomplete, Incomplete, Incomplete]
_Incomplete4: TypeAlias = tuple[Incomplete, Incomplete, Incomplete, Incomplete]
_Incomplete5: TypeAlias = tuple[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete]
_Incomplete6: TypeAlias = tuple[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete]
_Incomplete7: TypeAlias = tuple[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete]
_Incomplete8: TypeAlias = tuple[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete]
_Incomplete9: TypeAlias = tuple[
    Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete
]
_Incomplete10: TypeAlias = tuple[
    Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete, Incomplete
]
_Incomplete11: TypeAlias = tuple[
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
]
_Incomplete12: TypeAlias = tuple[
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
    Incomplete,
]

###

__f2py_numpy_version__: Final[str] = ...  # undocumented

###

# (kl, ku, ab, ipiv, anorm, [norm, ldab]) -> (rcond, info)
sgbcon: Final[Callable[..., _Incomplete2]] = ...
dgbcon: Final[Callable[..., _Incomplete2]] = ...
cgbcon: Final[Callable[..., _Incomplete2]] = ...
zgbcon: Final[Callable[..., _Incomplete2]] = ...

# (kl, ku, ab, b, [overwrite_ab, overwrite_b]) -> (lub, piv, x, info)
sgbsv: Final[Callable[..., _Incomplete4]] = ...
dgbsv: Final[Callable[..., _Incomplete4]] = ...
cgbsv: Final[Callable[..., _Incomplete4]] = ...
zgbsv: Final[Callable[..., _Incomplete4]] = ...

# (ab, kl, ku, [m, n, ldab, overwrite_ab]) -> (lu, ipiv, info)
sgbtrf: Final[Callable[..., _Incomplete3]] = ...
dgbtrf: Final[Callable[..., _Incomplete3]] = ...
cgbtrf: Final[Callable[..., _Incomplete3]] = ...
zgbtrf: Final[Callable[..., _Incomplete3]] = ...

# (ab, kl, ku, b, ipiv, [trans, n, ldab, ldb, overwrite_b]) -> (x, info)
sgbtrs: Final[Callable[..., _Incomplete2]] = ...
dgbtrs: Final[Callable[..., _Incomplete2]] = ...
cgbtrs: Final[Callable[..., _Incomplete2]] = ...
zgbtrs: Final[Callable[..., _Incomplete2]] = ...

# (a, [scale, permute, overwrite_a]) -> (ba, lo, hi, pivscale, info)
sgebal: Final[Callable[..., _Incomplete5]] = ...
dgebal: Final[Callable[..., _Incomplete5]] = ...
cgebal: Final[Callable[..., _Incomplete5]] = ...
zgebal: Final[Callable[..., _Incomplete5]] = ...

# (a, anorm, [norm]) -> (rcond, info)
sgecon: Final[Callable[..., _Incomplete2]] = ...
dgecon: Final[Callable[..., _Incomplete2]] = ...
cgecon: Final[Callable[..., _Incomplete2]] = ...
zgecon: Final[Callable[..., _Incomplete2]] = ...

# (a) -> (r, c, rowcnd, colcnd, amax, info)
sgeequ: Final[Callable[[Incomplete], _Incomplete6]] = ...
dgeequ: Final[Callable[[Incomplete], _Incomplete6]] = ...
cgeequ: Final[Callable[[Incomplete], _Incomplete6]] = ...
zgeequ: Final[Callable[[Incomplete], _Incomplete6]] = ...

# (a) -> (r, c, rowcnd, colcnd, amax, info)
sgeequb: Final[Callable[[Incomplete], _Incomplete6]] = ...
dgeequb: Final[Callable[[Incomplete], _Incomplete6]] = ...
cgeequb: Final[Callable[[Incomplete], _Incomplete6]] = ...
zgeequb: Final[Callable[[Incomplete], _Incomplete6]] = ...

# (sselect, a, [compute_v, sort_t, lwork, select_extra_args, overwrite_a]) -> (t, sdim, wr, wi, vs, work, info)
sgees: Final[Callable[..., _Incomplete7]] = ...
dgees: Final[Callable[..., _Incomplete7]] = ...
# (cselect, a, [compute_v, sort_t, lwork, select_extra_args, overwrite_a]) -> (t, sdim, w, vs, work, info)
cgees: Final[Callable[..., _Incomplete6]] = ...
zgees: Final[Callable[..., _Incomplete6]] = ...

# (a, [compute_vl, compute_vr, lwork, overwrite_a]) -> (wr, wi, vl, vr, info)
sgeev: Final[Callable[..., _Incomplete5]] = ...
dgeev: Final[Callable[..., _Incomplete5]] = ...
# (a, [compute_vl, compute_vr, lwork, overwrite_a]) -> (w, vl, vr, info)
cgeev: Final[Callable[..., _Incomplete4]] = ...
zgeev: Final[Callable[..., _Incomplete4]] = ...

# (n, [compute_vl, compute_vr]) -> (work, info)
sgeev_lwork: Final[Callable[..., _Incomplete2]] = ...
dgeev_lwork: Final[Callable[..., _Incomplete2]] = ...
cgeev_lwork: Final[Callable[..., _Incomplete2]] = ...
zgeev_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [lo, hi, lwork, overwrite_a]) -> (ht, tau, info)
sgehrd: Final[Callable[..., _Incomplete3]] = ...
dgehrd: Final[Callable[..., _Incomplete3]] = ...
cgehrd: Final[Callable[..., _Incomplete3]] = ...
zgehrd: Final[Callable[..., _Incomplete3]] = ...

# (n, [lo, hi]) -> (work, info)
sgehrd_lwork: Final[Callable[..., _Incomplete2]] = ...
dgehrd_lwork: Final[Callable[..., _Incomplete2]] = ...
cgehrd_lwork: Final[Callable[..., _Incomplete2]] = ...
zgehrd_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [joba, jobu, jobv, jobr, jobt, jobp, lwork, overwrite_a]) -> (sva, u, v, workout, iworkout, info)
sgejsv: Final[Callable[..., _Incomplete6]] = ...
dgejsv: Final[Callable[..., _Incomplete6]] = ...

# (a, b, [trans, lwork, overwrite_a, overwrite_b]) -> (lqr, x, info)
sgels: Final[Callable[..., _Incomplete3]] = ...
dgels: Final[Callable[..., _Incomplete3]] = ...
cgels: Final[Callable[..., _Incomplete3]] = ...
zgels: Final[Callable[..., _Incomplete3]] = ...

# (m, n, nrhs, [trans]) -> (work, info)
sgels_lwork: Final[Callable[..., _Incomplete2]] = ...
dgels_lwork: Final[Callable[..., _Incomplete2]] = ...
cgels_lwork: Final[Callable[..., _Incomplete2]] = ...
zgels_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, lwork, size_iwork, [cond, overwrite_a, overwrite_b]) -> (x, s, rank, info)
sgelsd: Final[Callable[..., _Incomplete4]] = ...
dgelsd: Final[Callable[..., _Incomplete4]] = ...
# (a, b, lwork, size_rwork, size_iwork, [cond, overwrite_a, overwrite_b]) -> (x, s, rank, info)
cgelsd: Final[Callable[..., _Incomplete4]] = ...
zgelsd: Final[Callable[..., _Incomplete4]] = ...

# (m, n, nrhs, [cond, lwork]) -> (work, iwork, info)
sgelsd_lwork: Final[Callable[..., _Incomplete3]] = ...
dgelsd_lwork: Final[Callable[..., _Incomplete3]] = ...
# (m, n, nrhs, [cond, lwork]) -> (work, rwork, iwork, info)
cgelsd_lwork: Final[Callable[..., _Incomplete4]] = ...
zgelsd_lwork: Final[Callable[..., _Incomplete4]] = ...

# (a, b, [cond, lwork, overwrite_a, overwrite_b]) -> (v, x, s, rank, work, info)
sgelss: Final[Callable[..., _Incomplete6]] = ...
dgelss: Final[Callable[..., _Incomplete6]] = ...
cgelss: Final[Callable[..., _Incomplete6]] = ...
zgelss: Final[Callable[..., _Incomplete6]] = ...

# (m, n, nrhs, [cond, lwork]) -> (work, info)
sgelss_lwork: Final[Callable[..., _Incomplete2]] = ...
dgelss_lwork: Final[Callable[..., _Incomplete2]] = ...
cgelss_lwork: Final[Callable[..., _Incomplete2]] = ...
zgelss_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, jptv, cond, lwork, [overwrite_a, overwrite_b]) -> (v, x, j, rank, info)
sgelsy: Final[Callable[..., _Incomplete5]] = ...
dgelsy: Final[Callable[..., _Incomplete5]] = ...
cgelsy: Final[Callable[..., _Incomplete5]] = ...
zgelsy: Final[Callable[..., _Incomplete5]] = ...

# (m, n, nrhs, cond, [lwork]) -> (work, info)
sgelsy_lwork: Final[Callable[..., _Incomplete2]] = ...
dgelsy_lwork: Final[Callable[..., _Incomplete2]] = ...
cgelsy_lwork: Final[Callable[..., _Incomplete2]] = ...
zgelsy_lwork: Final[Callable[..., _Incomplete2]] = ...

# (v, t, c, [side, trans, overwrite_c]) -> (c, info)
sgemqrt: Final[Callable[..., _Incomplete2]] = ...
dgemqrt: Final[Callable[..., _Incomplete2]] = ...
cgemqrt: Final[Callable[..., _Incomplete2]] = ...
zgemqrt: Final[Callable[..., _Incomplete2]] = ...

# (a, [lwork, overwrite_a]) -> (qr, jpvt, tau, work, info)
sgeqp3: Final[Callable[..., _Incomplete5]] = ...
dgeqp3: Final[Callable[..., _Incomplete5]] = ...
cgeqp3: Final[Callable[..., _Incomplete5]] = ...
zgeqp3: Final[Callable[..., _Incomplete5]] = ...

# (a, [lwork, overwrite_a]) -> (qr, tau, work, info)
sgeqrf: Final[Callable[..., _Incomplete4]] = ...
dgeqrf: Final[Callable[..., _Incomplete4]] = ...
cgeqrf: Final[Callable[..., _Incomplete4]] = ...
zgeqrf: Final[Callable[..., _Incomplete4]] = ...

# (m, n) -> (work, info)
sgeqrf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
dgeqrf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
cgeqrf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
zgeqrf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...

# (a, [lwork, overwrite_a]) -> (qr, tau, info)
sgeqrfp: Final[Callable[..., _Incomplete3]] = ...
dgeqrfp: Final[Callable[..., _Incomplete3]] = ...
cgeqrfp: Final[Callable[..., _Incomplete3]] = ...
zgeqrfp: Final[Callable[..., _Incomplete3]] = ...

# (m, n) -> (work, info)
sgeqrfp_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
dgeqrfp_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
cgeqrfp_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
zgeqrfp_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...

# (nb, a, [overwrite_a]) -> (a, t, info)
sgeqrt: Final[Callable[..., _Incomplete3]] = ...
dgeqrt: Final[Callable[..., _Incomplete3]] = ...
cgeqrt: Final[Callable[..., _Incomplete3]] = ...
zgeqrt: Final[Callable[..., _Incomplete3]] = ...

# (a, [lwork, overwrite_a]) -> (qr, tau, work, info)
sgerqf: Final[Callable[..., _Incomplete4]] = ...
dgerqf: Final[Callable[..., _Incomplete4]] = ...
cgerqf: Final[Callable[..., _Incomplete4]] = ...
zgerqf: Final[Callable[..., _Incomplete4]] = ...

# (lu, rhs, ipiv, jpiv, [overwrite_rhs]) -> (x, scale)
sgesc2: Final[Callable[..., _Incomplete2]] = ...
dgesc2: Final[Callable[..., _Incomplete2]] = ...
cgesc2: Final[Callable[..., _Incomplete2]] = ...
zgesc2: Final[Callable[..., _Incomplete2]] = ...

# (a, [compute_uv, full_matrices, lwork, overwrite_a]) -> (u, s, vt, info)
sgesdd: Final[Callable[..., _Incomplete4]] = ...
dgesdd: Final[Callable[..., _Incomplete4]] = ...
cgesdd: Final[Callable[..., _Incomplete4]] = ...
zgesdd: Final[Callable[..., _Incomplete4]] = ...

# (m, n, [compute_uv, full_matrices]) -> (work, info)
sgesdd_lwork: Final[Callable[..., _Incomplete2]] = ...
dgesdd_lwork: Final[Callable[..., _Incomplete2]] = ...
cgesdd_lwork: Final[Callable[..., _Incomplete2]] = ...
zgesdd_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [overwrite_a, overwrite_b]) -> (lu, piv, x, info)
sgesv: Final[Callable[..., _Incomplete4]] = ...
dgesv: Final[Callable[..., _Incomplete4]] = ...
cgesv: Final[Callable[..., _Incomplete4]] = ...
zgesv: Final[Callable[..., _Incomplete4]] = ...

# (a, [compute_uv, full_matrices, lwork, overwrite_a]) -> (u, s, vt, info)
sgesvd: Final[Callable[..., _Incomplete4]] = ...
dgesvd: Final[Callable[..., _Incomplete4]] = ...
cgesvd: Final[Callable[..., _Incomplete4]] = ...
zgesvd: Final[Callable[..., _Incomplete4]] = ...

# (m, n, [compute_uv, full_matrices]) -> (work, info)
sgesvd_lwork: Final[Callable[..., _Incomplete2]] = ...
dgesvd_lwork: Final[Callable[..., _Incomplete2]] = ...
cgesvd_lwork: Final[Callable[..., _Incomplete2]] = ...
zgesvd_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [fact, trans, af, ipiv, equed, r, c, ...]) -> (as, lu, ipiv, equed, rs, cs, bs, x, rcond, ferr, berr, info)
sgesvx: Final[Callable[..., _Incomplete12]] = ...
dgesvx: Final[Callable[..., _Incomplete12]] = ...
cgesvx: Final[Callable[..., _Incomplete12]] = ...
zgesvx: Final[Callable[..., _Incomplete12]] = ...

# (a, [overwrite_a]) -> (lu, ipiv, jpiv, info)
sgetc2: Final[Callable[..., _Incomplete4]] = ...
dgetc2: Final[Callable[..., _Incomplete4]] = ...
cgetc2: Final[Callable[..., _Incomplete4]] = ...
zgetc2: Final[Callable[..., _Incomplete4]] = ...

# (a, [overwrite_a]) -> (lu, piv, info)
sgetrf: Final[Callable[..., _Incomplete3]] = ...
dgetrf: Final[Callable[..., _Incomplete3]] = ...
cgetrf: Final[Callable[..., _Incomplete3]] = ...
zgetrf: Final[Callable[..., _Incomplete3]] = ...

# (lu, piv, [lwork, overwrite_lu]) -> (inv_a, info)
sgetri: Final[Callable[..., _Incomplete2]] = ...
dgetri: Final[Callable[..., _Incomplete2]] = ...
cgetri: Final[Callable[..., _Incomplete2]] = ...
zgetri: Final[Callable[..., _Incomplete2]] = ...

# (n) -> (work, info)
sgetri_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...
dgetri_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...
cgetri_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...
zgetri_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...

# (lu, piv, b, [trans, overwrite_b]) -> (x, info)
sgetrs: Final[Callable[..., _Incomplete2]] = ...
dgetrs: Final[Callable[..., _Incomplete2]] = ...
cgetrs: Final[Callable[..., _Incomplete2]] = ...
zgetrs: Final[Callable[..., _Incomplete2]] = ...

# (sselect, a, b, [jobvsl, jobvsr, sort_t, ldvsl, ldvsr, lwork, ...]) -> (a, b, sdim, alphar, alphai, beta, vsl, vsr, work, info)
sgges: Final[Callable[..., _Incomplete10]] = ...
dgges: Final[Callable[..., _Incomplete10]] = ...
# (cselect, a, b, [jobvsl, jobvsr, sort_t, ldvsl, ldvsr, lwork, ...]) -> (a, b, sdim, alpha, beta, vsl, vsr, work, info)
cgges: Final[Callable[..., _Incomplete9]] = ...
zgges: Final[Callable[..., _Incomplete9]] = ...

# (a, b, [compute_vl, compute_vr, lwork, overwrite_a, overwrite_b]) -> (alphar, alphai, beta, vl, vr, work, info)
sggev: Final[Callable[..., _Incomplete7]] = ...
dggev: Final[Callable[..., _Incomplete7]] = ...
# (a, b, [compute_vl, compute_vr, lwork, overwrite_a, overwrite_b]) -> (alpha, beta, vl, vr, work, info)
cggev: Final[Callable[..., _Incomplete6]] = ...
zggev: Final[Callable[..., _Incomplete6]] = ...

# (a, b, c, d, [lwork, overwrite_a, overwrite_b, overwrite_c, overwrite_d]) -> (t, r, res, x, info)
sgglse: Final[Callable[..., _Incomplete5]] = ...
dgglse: Final[Callable[..., _Incomplete5]] = ...
cgglse: Final[Callable[..., _Incomplete5]] = ...
zgglse: Final[Callable[..., _Incomplete5]] = ...

# (m, n, p) -> (work, info)
sgglse_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...
dgglse_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...
cgglse_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...
zgglse_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...

# (dl, d, du, du2, ipiv, anorm, [norm]) -> (rcond, info)
sgtcon: Final[Callable[..., _Incomplete2]] = ...
dgtcon: Final[Callable[..., _Incomplete2]] = ...
cgtcon: Final[Callable[..., _Incomplete2]] = ...
zgtcon: Final[Callable[..., _Incomplete2]] = ...

# (dl, d, du, b, [overwrite_dl, overwrite_d, overwrite_du, overwrite_b]) -> (du2, d, du, x, info)
sgtsv: Final[Callable[..., _Incomplete5]] = ...
dgtsv: Final[Callable[..., _Incomplete5]] = ...
cgtsv: Final[Callable[..., _Incomplete5]] = ...
zgtsv: Final[Callable[..., _Incomplete5]] = ...

# (dl, d, du, b, [fact, trans, dlf, df, duf, du2, ipiv]) -> (dlf, df, duf, du2, ipiv, x, rcond, ferr, berr, info)
sgtsvx: Final[Callable[..., _Incomplete10]] = ...
dgtsvx: Final[Callable[..., _Incomplete10]] = ...
cgtsvx: Final[Callable[..., _Incomplete10]] = ...
zgtsvx: Final[Callable[..., _Incomplete10]] = ...

# (dl, d, du, [overwrite_dl, overwrite_d, overwrite_du]) -> (dl, d, du, du2, ipiv, info)
sgttrf: Final[Callable[..., _Incomplete6]] = ...
dgttrf: Final[Callable[..., _Incomplete6]] = ...
cgttrf: Final[Callable[..., _Incomplete6]] = ...
zgttrf: Final[Callable[..., _Incomplete6]] = ...

# (dl, d, du, du2, ipiv, b, [trans, overwrite_b]) -> (x, info)
sgttrs: Final[Callable[..., _Incomplete2]] = ...
dgttrs: Final[Callable[..., _Incomplete2]] = ...
cgttrs: Final[Callable[..., _Incomplete2]] = ...
zgttrs: Final[Callable[..., _Incomplete2]] = ...

# (ab, [compute_v, lower, ldab, lrwork, liwork, overwrite_ab]) -> (w, z, info)
chbevd: Final[Callable[..., _Incomplete3]] = ...
zhbevd: Final[Callable[..., _Incomplete3]] = ...

# (ab, vl, vu, il, iu, [ldab, compute_v, range, lower, abstol, mmax, overwrite_ab]) -> (w, z, m, ifail, info)
chbevx: Final[Callable[..., _Incomplete5]] = ...
zhbevx: Final[Callable[..., _Incomplete5]] = ...

# (a, ipiv, anorm, [lower]) -> (rcond, info)
checon: Final[Callable[..., _Incomplete2]] = ...
zhecon: Final[Callable[..., _Incomplete2]] = ...

# (a, [lower]) -> (s, scond, amax, info)
cheequb: Final[Callable[..., _Incomplete4]] = ...
zheequb: Final[Callable[..., _Incomplete4]] = ...

# (a, [compute_v, lower, lwork, overwrite_a]) -> (w, v, info)
cheev: Final[Callable[..., _Incomplete3]] = ...
zheev: Final[Callable[..., _Incomplete3]] = ...

# (n, [lower]) -> (work, info)
cheev_lwork: Final[Callable[..., _Incomplete2]] = ...
zheev_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [compute_v, lower, lwork, liwork, lrwork, overwrite_a]) -> (w, v, info)
cheevd: Final[Callable[..., _Incomplete3]] = ...
zheevd: Final[Callable[..., _Incomplete3]] = ...

# (n, [compute_v, lower]) -> (work, iwork, rwork, info)
cheevd_lwork: Final[Callable[..., _Incomplete4]] = ...
zheevd_lwork: Final[Callable[..., _Incomplete4]] = ...

# (a, [compute_v, range, lower, vl, vu, il, iu, abstol, lwork, lrwork, liwork, overwrite_a]) -> (w, z, m, isuppz, info)
cheevr: Final[Callable[..., _Incomplete5]] = ...
zheevr: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, rwork, iwork, info)
cheevr_lwork: Final[Callable[..., _Incomplete4]] = ...
zheevr_lwork: Final[Callable[..., _Incomplete4]] = ...

# (a, [compute_v, range, lower, vl, vu, il, iu, abstol, lwork, overwrite_a]) -> (w, z, m, ifail, info)
cheevx: Final[Callable[..., _Incomplete5]] = ...
zheevx: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, info)
cheevx_lwork: Final[Callable[..., _Incomplete2]] = ...
zheevx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, lower, overwrite_a]) -> (c, info)
chegst: Final[Callable[..., _Incomplete2]] = ...
zhegst: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, jobz, uplo, lwork, overwrite_a, overwrite_b]) -> (w, v, info)
chegv: Final[Callable[..., _Incomplete3]] = ...
zhegv: Final[Callable[..., _Incomplete3]] = ...

# (n, [uplo]) -> (work, info)
chegv_lwork: Final[Callable[..., _Incomplete2]] = ...
zhegv_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, jobz, uplo, lwork, lrwork, liwork, overwrite_a, overwrite_b]) -> (w, v, info)
chegvd: Final[Callable[..., _Incomplete3]] = ...
zhegvd: Final[Callable[..., _Incomplete3]] = ...

# (a, b, [itype, jobz, range, uplo, vl, vu, il, iu, abstol, lwork, overwrite_a, overwrite_b]) -> (w, z, m, ifail, info)
chegvx: Final[Callable[..., _Incomplete5]] = ...
zhegvx: Final[Callable[..., _Incomplete5]] = ...

# (n, [uplo]) -> (work, info)
chegvx_lwork: Final[Callable[..., _Incomplete2]] = ...
zhegvx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [lwork, lower, overwrite_a, overwrite_b]) -> (uduh, ipiv, x, info)
chesv: Final[Callable[..., _Incomplete4]] = ...
zhesv: Final[Callable[..., _Incomplete4]] = ...

# (n, [lower]) -> (work, info)
chesv_lwork: Final[Callable[..., _Incomplete2]] = ...
zhesv_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [af, ipiv, lwork, factored, lower, overwrite_a, overwrite_b]) -> (uduh, ipiv, x, rcond, ferr, berr, info)
chesvx: Final[Callable[..., _Incomplete7]] = ...
zhesvx: Final[Callable[..., _Incomplete7]] = ...

# (n, [lower]) -> (work, info)
chesvx_lwork: Final[Callable[..., _Incomplete2]] = ...
zhesvx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [lower, lwork, overwrite_a]) -> (c, d, e, tau, info)
chetrd: Final[Callable[..., _Incomplete5]] = ...
zhetrd: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, info)
chetrd_lwork: Final[Callable[..., _Incomplete2]] = ...
zhetrd_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [lower, lwork, overwrite_a]) -> (ldu, ipiv, info)
chetrf: Final[Callable[..., _Incomplete3]] = ...
zhetrf: Final[Callable[..., _Incomplete3]] = ...

# (n, [lower]) -> (work, info)
chetrf_lwork: Final[Callable[..., _Incomplete2]] = ...
zhetrf_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, ipiv, [lower, overwrite_a]) -> (inv_a, info)
chetri: Final[Callable[..., _Incomplete2]] = ...
zhetri: Final[Callable[..., _Incomplete2]] = ...

# (a, ipiv, b, [lower, overwrite_b]) -> (x, info)
chetrs: Final[Callable[..., _Incomplete2]] = ...
zhetrs: Final[Callable[..., _Incomplete2]] = ...

# (n, k, alpha, a, beta, c, [transr, uplo, trans, overwrite_c]) -> cout
chfrk: Final[Callable[..., Incomplete]] = ...
zhfrk: Final[Callable[..., Incomplete]] = ...

# (cmach) -> x
slamch: Final[Callable[[Incomplete], Incomplete]] = ...
dlamch: Final[Callable[[Incomplete], Incomplete]] = ...

# (norm, kl, ku, ab, [ldab]) -> n2
slangb: Final[Callable[..., Incomplete]] = ...
dlangb: Final[Callable[..., Incomplete]] = ...
clangb: Final[Callable[..., Incomplete]] = ...
zlangb: Final[Callable[..., Incomplete]] = ...

# (norm, a) -> n2
slange: Final[Callable[[Incomplete], Incomplete]] = ...
dlange: Final[Callable[[Incomplete], Incomplete]] = ...
clange: Final[Callable[[Incomplete], Incomplete]] = ...
zlange: Final[Callable[[Incomplete], Incomplete]] = ...

# (norm, a, [uplo, diag]) -> n2
slantr: Final[Callable[..., Incomplete]] = ...
dlantr: Final[Callable[..., Incomplete]] = ...
clantr: Final[Callable[..., Incomplete]] = ...
zlantr: Final[Callable[..., Incomplete]] = ...

# (v, tau, c, work, [side, incv, overwrite_c]) -> c
slarf: Final[Callable[..., Incomplete]] = ...
dlarf: Final[Callable[..., Incomplete]] = ...
clarf: Final[Callable[..., Incomplete]] = ...
zlarf: Final[Callable[..., Incomplete]] = ...

# (n, alpha, x, [incx, overwrite_x]) -> (alpha, x, tau)
slarfg: Final[Callable[..., _Incomplete3]] = ...
dlarfg: Final[Callable[..., _Incomplete3]] = ...
clarfg: Final[Callable[..., _Incomplete3]] = ...
zlarfg: Final[Callable[..., _Incomplete3]] = ...

# (f, g) -> (cs, sn, r)
slartg: Final[Callable[[Incomplete], _Incomplete3]] = ...
dlartg: Final[Callable[[Incomplete], _Incomplete3]] = ...
clartg: Final[Callable[[Incomplete], _Incomplete3]] = ...
zlartg: Final[Callable[[Incomplete], _Incomplete3]] = ...

# (i, d, z, [rho]) -> (delta, sigma, work, info)
slasd4: Final[Callable[..., _Incomplete4]] = ...
dlasd4: Final[Callable[..., _Incomplete4]] = ...

# (a, piv, [k1, k2, off, inc, overwrite_a]) -> a
slaswp: Final[Callable[..., Incomplete]] = ...
dlaswp: Final[Callable[..., Incomplete]] = ...
claswp: Final[Callable[..., Incomplete]] = ...
zlaswp: Final[Callable[..., Incomplete]] = ...

# (c, [lower, overwrite_c]) -> (a, info)
slauum: Final[Callable[..., _Incomplete2]] = ...
dlauum: Final[Callable[..., _Incomplete2]] = ...
clauum: Final[Callable[..., _Incomplete2]] = ...
zlauum: Final[Callable[..., _Incomplete2]] = ...

# (x11, x12, x21, x22, [...]) -> (cs11, cs12, cs21, cs22, theta, u1, u2, v1t, v2t, info)
sorcsd: Final[Callable[..., _Incomplete10]] = ...
dorcsd: Final[Callable[..., _Incomplete10]] = ...

# (m, p, q) -> (work, info)
sorcsd_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...
dorcsd_lwork: Final[Callable[[Incomplete], _Incomplete2]] = ...

# (a, tau, [lo, hi, lwork, overwrite_a]) -> (ht, info)
sorghr: Final[Callable[..., _Incomplete2]] = ...
dorghr: Final[Callable[..., _Incomplete2]] = ...

# (n, [lo, hi]) -> (work, info)
sorghr_lwork: Final[Callable[..., _Incomplete2]] = ...
dorghr_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, tau, [lwork, overwrite_a]) -> (q, work, info)
sorgqr: Final[Callable[..., _Incomplete3]] = ...
dorgqr: Final[Callable[..., _Incomplete3]] = ...
sorgrq: Final[Callable[..., _Incomplete3]] = ...
dorgrq: Final[Callable[..., _Incomplete3]] = ...

# (side, trans, a, tau, c, lwork, [overwrite_c]) -> (cq, work, info)
sormqr: Final[Callable[..., _Incomplete3]] = ...
dormqr: Final[Callable[..., _Incomplete3]] = ...

# (a, tau, c, [side, trans, lwork, overwrite_c]) -> (cq, info)
sormrz: Final[Callable[..., _Incomplete2]] = ...
dormrz: Final[Callable[..., _Incomplete2]] = ...

# (m, n, [side, trans]) -> (work, info)
sormrz_lwork: Final[Callable[..., _Incomplete2]] = ...
dormrz_lwork: Final[Callable[..., _Incomplete2]] = ...

# (ab, b, [lower, ldab, overwrite_ab, overwrite_b]) -> (c, x, info)
spbsv: Final[Callable[..., _Incomplete3]] = ...
dpbsv: Final[Callable[..., _Incomplete3]] = ...
cpbsv: Final[Callable[..., _Incomplete3]] = ...
zpbsv: Final[Callable[..., _Incomplete3]] = ...

# (ab, [lower, ldab, overwrite_ab]) -> (c, info)
spbtrf: Final[Callable[..., _Incomplete2]] = ...
dpbtrf: Final[Callable[..., _Incomplete2]] = ...
cpbtrf: Final[Callable[..., _Incomplete2]] = ...
zpbtrf: Final[Callable[..., _Incomplete2]] = ...

# (ab, b, [lower, ldab, overwrite_b]) -> (x, info)
spbtrs: Final[Callable[..., _Incomplete2]] = ...
dpbtrs: Final[Callable[..., _Incomplete2]] = ...
cpbtrs: Final[Callable[..., _Incomplete2]] = ...
zpbtrs: Final[Callable[..., _Incomplete2]] = ...

# (n, a, [transr, uplo, overwrite_a]) -> (achol, info)
spftrf: Final[Callable[..., _Incomplete2]] = ...
dpftrf: Final[Callable[..., _Incomplete2]] = ...
cpftrf: Final[Callable[..., _Incomplete2]] = ...
zpftrf: Final[Callable[..., _Incomplete2]] = ...

# (n, a, [transr, uplo, overwrite_a]) -> (ainv, info)
spftri: Final[Callable[..., _Incomplete2]] = ...
dpftri: Final[Callable[..., _Incomplete2]] = ...
cpftri: Final[Callable[..., _Incomplete2]] = ...
zpftri: Final[Callable[..., _Incomplete2]] = ...

# (n, a, b, [transr, uplo, overwrite_b]) -> (x, info)
spftrs: Final[Callable[..., _Incomplete2]] = ...
dpftrs: Final[Callable[..., _Incomplete2]] = ...
cpftrs: Final[Callable[..., _Incomplete2]] = ...
zpftrs: Final[Callable[..., _Incomplete2]] = ...

# (a, anorm, [uplo]) -> (rcond, info)
spocon: Final[Callable[..., _Incomplete2]] = ...
dpocon: Final[Callable[..., _Incomplete2]] = ...
cpocon: Final[Callable[..., _Incomplete2]] = ...
zpocon: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [lower, overwrite_a, overwrite_b]) -> (c, x, info)
sposv: Final[Callable[..., _Incomplete3]] = ...
dposv: Final[Callable[..., _Incomplete3]] = ...
cposv: Final[Callable[..., _Incomplete3]] = ...
zposv: Final[Callable[..., _Incomplete3]] = ...

# (a, b, [fact, af, equed, s, lower, overwrite_a, overwrite_b]) -> (a_s, lu, equed, s, b_s, x, rcond, ferr, berr, info)
sposvx: Final[Callable[..., _Incomplete10]] = ...
dposvx: Final[Callable[..., _Incomplete10]] = ...
cposvx: Final[Callable[..., _Incomplete10]] = ...
zposvx: Final[Callable[..., _Incomplete10]] = ...

# (a, [lower, clean, overwrite_a]) -> (c, info)
spotrf: Final[Callable[..., _Incomplete2]] = ...
dpotrf: Final[Callable[..., _Incomplete2]] = ...
cpotrf: Final[Callable[..., _Incomplete2]] = ...
zpotrf: Final[Callable[..., _Incomplete2]] = ...

# (c, [lower, overwrite_c]) -> (inv_a, info)
spotri: Final[Callable[..., _Incomplete2]] = ...
dpotri: Final[Callable[..., _Incomplete2]] = ...
cpotri: Final[Callable[..., _Incomplete2]] = ...
zpotri: Final[Callable[..., _Incomplete2]] = ...

# (c, b, [lower, overwrite_b]) -> (x, info)
spotrs: Final[Callable[..., _Incomplete2]] = ...
dpotrs: Final[Callable[..., _Incomplete2]] = ...
cpotrs: Final[Callable[..., _Incomplete2]] = ...
zpotrs: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, anorm, [lower]) -> (rcond, info)
sppcon: Final[Callable[..., _Incomplete2]] = ...
dppcon: Final[Callable[..., _Incomplete2]] = ...
cppcon: Final[Callable[..., _Incomplete2]] = ...
zppcon: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, b, [lower, overwrite_b]) -> (x, info)
sppsv: Final[Callable[..., _Incomplete2]] = ...
dppsv: Final[Callable[..., _Incomplete2]] = ...
cppsv: Final[Callable[..., _Incomplete2]] = ...
zppsv: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, [lower, overwrite_ap]) -> (ul, info)
spptrf: Final[Callable[..., _Incomplete2]] = ...
dpptrf: Final[Callable[..., _Incomplete2]] = ...
cpptrf: Final[Callable[..., _Incomplete2]] = ...
zpptrf: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, [lower, overwrite_ap]) -> (uli, info)
spptri: Final[Callable[..., _Incomplete2]] = ...
dpptri: Final[Callable[..., _Incomplete2]] = ...
cpptri: Final[Callable[..., _Incomplete2]] = ...
zpptri: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, b, [lower, overwrite_b]) -> (x, info)
spptrs: Final[Callable[..., _Incomplete2]] = ...
dpptrs: Final[Callable[..., _Incomplete2]] = ...
cpptrs: Final[Callable[..., _Incomplete2]] = ...
zpptrs: Final[Callable[..., _Incomplete2]] = ...

# (a, [tol, lower, overwrite_a]) -> (c, piv, rank_c, info)
spstf2: Final[Callable[..., _Incomplete4]] = ...
dpstf2: Final[Callable[..., _Incomplete4]] = ...
cpstf2: Final[Callable[..., _Incomplete4]] = ...
zpstf2: Final[Callable[..., _Incomplete4]] = ...

spstrf: Final[Callable[..., _Incomplete4]] = ...
dpstrf: Final[Callable[..., _Incomplete4]] = ...
cpstrf: Final[Callable[..., _Incomplete4]] = ...
zpstrf: Final[Callable[..., _Incomplete4]] = ...

# (d, e, z, [compute_z, overwrite_d, overwrite_e, overwrite_z]) -> (d, e, z, info)
spteqr: Final[Callable[..., _Incomplete4]] = ...
dpteqr: Final[Callable[..., _Incomplete4]] = ...
cpteqr: Final[Callable[..., _Incomplete4]] = ...
zpteqr: Final[Callable[..., _Incomplete4]] = ...

# (d, e, b, [overwrite_d, overwrite_e, overwrite_b]) -> (d, du, x, info)
sptsv: Final[Callable[..., _Incomplete4]] = ...
dptsv: Final[Callable[..., _Incomplete4]] = ...
cptsv: Final[Callable[..., _Incomplete4]] = ...
zptsv: Final[Callable[..., _Incomplete4]] = ...

# (d, e, b, [fact, df, ef]) -> (df, ef, x, rcond, ferr, berr, info)
sptsvx: Final[Callable[..., _Incomplete7]] = ...
dptsvx: Final[Callable[..., _Incomplete7]] = ...
cptsvx: Final[Callable[..., _Incomplete7]] = ...
zptsvx: Final[Callable[..., _Incomplete7]] = ...

# (d, e, [overwrite_d, overwrite_e]) -> (d, e, info)
spttrf: Final[Callable[..., _Incomplete3]] = ...
dpttrf: Final[Callable[..., _Incomplete3]] = ...
cpttrf: Final[Callable[..., _Incomplete3]] = ...
zpttrf: Final[Callable[..., _Incomplete3]] = ...

# (d, e, b, [overwrite_b]) -> (x, info)
spttrs: Final[Callable[..., _Incomplete2]] = ...
dpttrs: Final[Callable[..., _Incomplete2]] = ...
# (d, e, b, [lower, overwrite_b]) -> (x, info)
cpttrs: Final[Callable[..., _Incomplete2]] = ...
zpttrs: Final[Callable[..., _Incomplete2]] = ...

# (x, y, c, s, [n, offx, incx, offy, incy, overwrite_x, overwrite_y]) -> (x, y)
crot: Final[Callable[..., _Incomplete2]] = ...
zrot: Final[Callable[..., _Incomplete2]] = ...

# (ab, [compute_v, lower, ldab, overwrite_ab]) -> (w, z, info)
ssbev: Final[Callable[..., _Incomplete3]] = ...
dsbev: Final[Callable[..., _Incomplete3]] = ...

# (ab, [compute_v, lower, ldab, liwork, overwrite_ab]) -> (w, z, info)
ssbevd: Final[Callable[..., _Incomplete3]] = ...
dsbevd: Final[Callable[..., _Incomplete3]] = ...

# (ab, vl, vu, il, iu, [ldab, compute_v, range, lower, abstol, mmax, overwrite_ab]) -> (w, z, m, ifail, info)
ssbevx: Final[Callable[..., _Incomplete5]] = ...
dsbevx: Final[Callable[..., _Incomplete5]] = ...

# (n, k, alpha, a, beta, c, [transr, uplo, trans, overwrite_c]) -> cout
ssfrk: Final[Callable[..., Incomplete]] = ...
dsfrk: Final[Callable[..., Incomplete]] = ...

# (d, e, range, vl, vu, il, iu, tol, order) -> (m, w, iblock, isplit, info)
sstebz: Final[Callable[..., _Incomplete5]] = ...
dstebz: Final[Callable[..., _Incomplete5]] = ...

# (d, e, w, iblock, isplit) -> (z, info)
sstein: Final[Callable[[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...
dstein: Final[Callable[[Incomplete, Incomplete, Incomplete, Incomplete, Incomplete], _Incomplete2]] = ...

# (d, e, range, vl, vu, il, iu, [compute_v, lwork, liwork, overwrite_d]) -> (m, w, z, info)
sstemr: Final[Callable[..., _Incomplete4]] = ...
dstemr: Final[Callable[..., _Incomplete4]] = ...

# (d, e, range, vl, vu, il, iu, [compute_v, overwrite_d, overwrite_e]) -> (work, iwork, info)
sstemr_lwork: Final[Callable[..., _Incomplete3]] = ...
dstemr_lwork: Final[Callable[..., _Incomplete3]] = ...

# (d, e, [overwrite_d, overwrite_e]) -> (vals, info)
ssterf: Final[Callable[..., _Incomplete2]] = ...
dsterf: Final[Callable[..., _Incomplete2]] = ...

# (d, e, [compute_v, overwrite_d, overwrite_e]) -> (vals, z, info)
sstev: Final[Callable[..., _Incomplete3]] = ...
dstev: Final[Callable[..., _Incomplete3]] = ...

# (d, e, [compute_v, lwork, liwork, overwrite_d, overwrite_e]) -> (vals, z, info)
sstevd: Final[Callable[..., _Incomplete3]] = ...
dstevd: Final[Callable[..., _Incomplete3]] = ...

# (a, ipiv, anorm, [lower]) -> (rcond, info)
ssycon: Final[Callable[..., _Incomplete2]] = ...
dsycon: Final[Callable[..., _Incomplete2]] = ...
csycon: Final[Callable[..., _Incomplete2]] = ...
zsycon: Final[Callable[..., _Incomplete2]] = ...

# (a, ipiv, [lower, way, overwrite_a]) -> (a, e, info)
ssyconv: Final[Callable[..., _Incomplete3]] = ...
dsyconv: Final[Callable[..., _Incomplete3]] = ...
csyconv: Final[Callable[..., _Incomplete3]] = ...
zsyconv: Final[Callable[..., _Incomplete3]] = ...

# (a, [lower]) -> (s, scond, amax, info)
ssyequb: Final[Callable[..., _Incomplete4]] = ...
dsyequb: Final[Callable[..., _Incomplete4]] = ...
csyequb: Final[Callable[..., _Incomplete4]] = ...
zsyequb: Final[Callable[..., _Incomplete4]] = ...

# (a, [compute_v, lower, lwork, overwrite_a]) -> (w, v, info)
ssyev: Final[Callable[..., _Incomplete3]] = ...
dsyev: Final[Callable[..., _Incomplete3]] = ...

# (n, [lower]) -> (work, info)
ssyev_lwork: Final[Callable[..., _Incomplete2]] = ...
dsyev_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [compute_v, lower, lwork, liwork, overwrite_a]) -> (w, v, info)
ssyevd: Final[Callable[..., _Incomplete3]] = ...
dsyevd: Final[Callable[..., _Incomplete3]] = ...

# (n, [compute_v, lower]) -> (work, iwork, info)
ssyevd_lwork: Final[Callable[..., _Incomplete3]] = ...
dsyevd_lwork: Final[Callable[..., _Incomplete3]] = ...

# (a, [compute_v, range, lower, vl, vu, il, iu, abstol, lwork, liwork, overwrite_a]) -> (w, z, m, isuppz, info)
ssyevr: Final[Callable[..., _Incomplete5]] = ...
dsyevr: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, iwork, info)
ssyevr_lwork: Final[Callable[..., _Incomplete3]] = ...
dsyevr_lwork: Final[Callable[..., _Incomplete3]] = ...

# (a, [compute_v, range, lower, vl, vu, il, iu, abstol, lwork, overwrite_a]) -> (w, z, m, ifail, info)
ssyevx: Final[Callable[..., _Incomplete5]] = ...
dsyevx: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, info)
ssyevx_lwork: Final[Callable[..., _Incomplete2]] = ...
dsyevx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, lower, overwrite_a]) -> (c, info)
ssygst: Final[Callable[..., _Incomplete2]] = ...
dsygst: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, jobz, uplo, lwork, overwrite_a, overwrite_b]) -> (w, v, info)
ssygv: Final[Callable[..., _Incomplete3]] = ...
dsygv: Final[Callable[..., _Incomplete3]] = ...

# (n, [uplo]) -> (work, info)
ssygv_lwork: Final[Callable[..., _Incomplete2]] = ...
dsygv_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [itype, jobz, uplo, lwork, liwork, overwrite_a, overwrite_b]) -> (w, v, info)
ssygvd: Final[Callable[..., _Incomplete3]] = ...
dsygvd: Final[Callable[..., _Incomplete3]] = ...

# (a, b, [itype, jobz, range, uplo, vl, vu, il, iu, abstol, lwork, overwrite_a, overwrite_b]) -> (w, z, m, ifail, info)
ssygvx: Final[Callable[..., _Incomplete5]] = ...
dsygvx: Final[Callable[..., _Incomplete5]] = ...

# (n, [uplo]) -> (work, info)
ssygvx_lwork: Final[Callable[..., _Incomplete2]] = ...
dsygvx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [lwork, lower, overwrite_a, overwrite_b]) -> (udut, ipiv, x, info)
ssysv: Final[Callable[..., _Incomplete4]] = ...
dsysv: Final[Callable[..., _Incomplete4]] = ...
csysv: Final[Callable[..., _Incomplete4]] = ...
zsysv: Final[Callable[..., _Incomplete4]] = ...

# (n, [lower]) -> (work, info)
ssysv_lwork: Final[Callable[..., _Incomplete2]] = ...
dsysv_lwork: Final[Callable[..., _Incomplete2]] = ...
csysv_lwork: Final[Callable[..., _Incomplete2]] = ...
zsysv_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [af, ipiv, lwork, factored, lower, overwrite_a, overwrite_b]) -> (a_s, udut, ipiv, b_s, x, rcond, ferr, berr, info)
ssysvx: Final[Callable[..., _Incomplete9]] = ...
dsysvx: Final[Callable[..., _Incomplete9]] = ...
csysvx: Final[Callable[..., _Incomplete9]] = ...
zsysvx: Final[Callable[..., _Incomplete9]] = ...

# (n, [lower]) -> (work, info)
ssysvx_lwork: Final[Callable[..., _Incomplete2]] = ...
dsysvx_lwork: Final[Callable[..., _Incomplete2]] = ...
csysvx_lwork: Final[Callable[..., _Incomplete2]] = ...
zsysvx_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [lower, overwrite_a]) -> (ldu, ipiv, info)
ssytf2: Final[Callable[..., _Incomplete3]] = ...
dsytf2: Final[Callable[..., _Incomplete3]] = ...
csytf2: Final[Callable[..., _Incomplete3]] = ...
zsytf2: Final[Callable[..., _Incomplete3]] = ...

# (a, [lower, lwork, overwrite_a]) -> (c, d, e, tau, info)
ssytrd: Final[Callable[..., _Incomplete5]] = ...
dsytrd: Final[Callable[..., _Incomplete5]] = ...

# (n, [lower]) -> (work, info)
ssytrd_lwork: Final[Callable[..., _Incomplete2]] = ...
dsytrd_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, [lower, lwork, overwrite_a]) -> (ldu, ipiv, info)
ssytrf: Final[Callable[..., _Incomplete3]] = ...
dsytrf: Final[Callable[..., _Incomplete3]] = ...
csytrf: Final[Callable[..., _Incomplete3]] = ...
zsytrf: Final[Callable[..., _Incomplete3]] = ...

# (n, [lower]) -> (work, info)
ssytrf_lwork: Final[Callable[..., _Incomplete2]] = ...
dsytrf_lwork: Final[Callable[..., _Incomplete2]] = ...
csytrf_lwork: Final[Callable[..., _Incomplete2]] = ...
zsytrf_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, ipiv, [lower, overwrite_a]) -> (inv_a, info)
ssytri: Final[Callable[..., _Incomplete2]] = ...
dsytri: Final[Callable[..., _Incomplete2]] = ...
csytri: Final[Callable[..., _Incomplete2]] = ...
zsytri: Final[Callable[..., _Incomplete2]] = ...

# (a, ipiv, b, [lower, overwrite_b]) -> (x, info)
ssytrs: Final[Callable[..., _Incomplete2]] = ...
dsytrs: Final[Callable[..., _Incomplete2]] = ...
csytrs: Final[Callable[..., _Incomplete2]] = ...
zsytrs: Final[Callable[..., _Incomplete2]] = ...

# (ab, b, [uplo, trans, diag, overwrite_b]) -> (x, info)
stbtrs: Final[Callable[..., _Incomplete2]] = ...
dtbtrs: Final[Callable[..., _Incomplete2]] = ...
ctbtrs: Final[Callable[..., _Incomplete2]] = ...
ztbtrs: Final[Callable[..., _Incomplete2]] = ...

# (alpha, a, b, [transr, side, uplo, trans, diag, overwrite_b]) -> x
stfsm: Final[Callable[..., Incomplete]] = ...
dtfsm: Final[Callable[..., Incomplete]] = ...
ctfsm: Final[Callable[..., Incomplete]] = ...
ztfsm: Final[Callable[..., Incomplete]] = ...

# (n, arf, [transr, uplo]) -> (ap, info)
stfttp: Final[Callable[..., _Incomplete2]] = ...
dtfttp: Final[Callable[..., _Incomplete2]] = ...
ctfttp: Final[Callable[..., _Incomplete2]] = ...
ztfttp: Final[Callable[..., _Incomplete2]] = ...

# (n, arf, [transr, uplo]) -> (a, info)
stfttr: Final[Callable[..., _Incomplete2]] = ...
dtfttr: Final[Callable[..., _Incomplete2]] = ...
ctfttr: Final[Callable[..., _Incomplete2]] = ...
ztfttr: Final[Callable[..., _Incomplete2]] = ...

# (a, b, q, z, ifst, ilst, [wantq, wantz, lwork, overwrite_a, overwrite_b, overwrite_q, overwrite_z]) -> (a, b, q, z, work, info)
stgexc: Final[Callable[..., _Incomplete6]] = ...
dtgexc: Final[Callable[..., _Incomplete6]] = ...
# (a, b, q, z, ifst, ilst, [wantq, wantz, overwrite_a, overwrite_b, overwrite_q, overwrite_z]) -> (a, b, q, z, info)
ctgexc: Final[Callable[..., _Incomplete5]] = ...
ztgexc: Final[Callable[..., _Incomplete5]] = ...

# (select, a, b, q, z, [ijob, wantq, wantz, lwork, liwork, ...]) -> (as, bs, alphar, alphai, beta, qs, zs, m, pl, pr, dif, info)
stgsen: Final[Callable[..., _Incomplete12]] = ...
dtgsen: Final[Callable[..., _Incomplete12]] = ...
# (select, a, b, q, z, [ijob, wantq, wantz, lwork, liwork, ...]) -> (as, bs, alpha, beta, qs, zs, m, pl, pr, dif, info)
ctgsen: Final[Callable[..., _Incomplete11]] = ...
ztgsen: Final[Callable[..., _Incomplete11]] = ...

# (select, a, [ijob]) -> (work, iwork, info)
stgsen_lwork: Final[Callable[..., _Incomplete3]] = ...
dtgsen_lwork: Final[Callable[..., _Incomplete3]] = ...
# (select, a, b, [ijob]) -> (work, iwork, info)
ctgsen_lwork: Final[Callable[..., _Incomplete3]] = ...
ztgsen_lwork: Final[Callable[..., _Incomplete3]] = ...

# (a, b, c, d, e, f, [trans, ijob, lwork, overwrite_c, overwrite_f]) -> (r, l, scale, dif, info)
stgsyl: Final[Callable[..., _Incomplete5]] = ...
dtgsyl: Final[Callable[..., _Incomplete5]] = ...

# (l, v, t, a, b, [side, trans, overwrite_a, overwrite_b]) -> (a, b, info)
stpmqrt: Final[Callable[..., _Incomplete3]] = ...
dtpmqrt: Final[Callable[..., _Incomplete3]] = ...
ctpmqrt: Final[Callable[..., _Incomplete3]] = ...
ztpmqrt: Final[Callable[..., _Incomplete3]] = ...

# (l, nb, a, b, [overwrite_a, overwrite_b]) -> (a, b, t, info)
stpqrt: Final[Callable[..., _Incomplete4]] = ...
dtpqrt: Final[Callable[..., _Incomplete4]] = ...
ctpqrt: Final[Callable[..., _Incomplete4]] = ...
ztpqrt: Final[Callable[..., _Incomplete4]] = ...

# (n, ap, [transr, uplo]) -> (arf, info)
stpttf: Final[Callable[..., _Incomplete2]] = ...
dtpttf: Final[Callable[..., _Incomplete2]] = ...
ctpttf: Final[Callable[..., _Incomplete2]] = ...
ztpttf: Final[Callable[..., _Incomplete2]] = ...

# (n, ap, [uplo]) -> (a, info)
stpttr: Final[Callable[..., _Incomplete2]] = ...
dtpttr: Final[Callable[..., _Incomplete2]] = ...
ctpttr: Final[Callable[..., _Incomplete2]] = ...
ztpttr: Final[Callable[..., _Incomplete2]] = ...

# (a, [norm, uplo, diag]) -> (rcond, info)
strcon: Final[Callable[..., _Incomplete2]] = ...
dtrcon: Final[Callable[..., _Incomplete2]] = ...
ctrcon: Final[Callable[..., _Incomplete2]] = ...
ztrcon: Final[Callable[..., _Incomplete2]] = ...

# (a, q, ifst, ilst, [wantq, overwrite_a, overwrite_q]) -> (a, q, info)
strexc: Final[Callable[..., _Incomplete3]] = ...
dtrexc: Final[Callable[..., _Incomplete3]] = ...
ctrexc: Final[Callable[..., _Incomplete3]] = ...
ztrexc: Final[Callable[..., _Incomplete3]] = ...

# (select, t, q, [job, wantq, lwork, liwork, overwrite_t, overwrite_q]) -> (ts, qs, wr, wi, m, s, sep, info)
strsen: Final[Callable[..., _Incomplete8]] = ...
dtrsen: Final[Callable[..., _Incomplete8]] = ...
# (select, t, q, [job, wantq, lwork, overwrite_t, overwrite_q]) -> (ts, qs, w, m, s, sep, info)
ctrsen: Final[Callable[..., _Incomplete7]] = ...
ztrsen: Final[Callable[..., _Incomplete7]] = ...

# (select, t, [job]) -> (work, iwork, info)
strsen_lwork: Final[Callable[..., _Incomplete3]] = ...
dtrsen_lwork: Final[Callable[..., _Incomplete3]] = ...
# (select, t, [job]) -> (work, info)
ctrsen_lwork: Final[Callable[..., _Incomplete2]] = ...
ztrsen_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, b, c, [trana, tranb, isgn, overwrite_c]) -> (x, scale, info)
strsyl: Final[Callable[..., _Incomplete3]] = ...
dtrsyl: Final[Callable[..., _Incomplete3]] = ...
ctrsyl: Final[Callable[..., _Incomplete3]] = ...
ztrsyl: Final[Callable[..., _Incomplete3]] = ...

# (c, [lower, unitdiag, overwrite_c]) -> (inv_c, info)
strtri: Final[Callable[..., _Incomplete2]] = ...
dtrtri: Final[Callable[..., _Incomplete2]] = ...
ctrtri: Final[Callable[..., _Incomplete2]] = ...
ztrtri: Final[Callable[..., _Incomplete2]] = ...

# (a, b, [lower, trans, unitdiag, lda, overwrite_b]) -> (x, info)
strtrs: Final[Callable[..., _Incomplete2]] = ...
dtrtrs: Final[Callable[..., _Incomplete2]] = ...
ctrtrs: Final[Callable[..., _Incomplete2]] = ...
ztrtrs: Final[Callable[..., _Incomplete2]] = ...

# (a, [transr, uplo]) -> (arf, info)
strttf: Final[Callable[..., _Incomplete2]] = ...
dtrttf: Final[Callable[..., _Incomplete2]] = ...
ctrttf: Final[Callable[..., _Incomplete2]] = ...
ztrttf: Final[Callable[..., _Incomplete2]] = ...

# (a, [uplo]) -> (ap, info)
strttp: Final[Callable[..., _Incomplete2]] = ...
dtrttp: Final[Callable[..., _Incomplete2]] = ...
ctrttp: Final[Callable[..., _Incomplete2]] = ...
ztrttp: Final[Callable[..., _Incomplete2]] = ...

# (a, [lwork, overwrite_a]) -> (rz, tau, info)
stzrzf: Final[Callable[..., _Incomplete3]] = ...
dtzrzf: Final[Callable[..., _Incomplete3]] = ...
ctzrzf: Final[Callable[..., _Incomplete3]] = ...
ztzrzf: Final[Callable[..., _Incomplete3]] = ...

# (m, n) -> (work, info)
stzrzf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
dtzrzf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
ctzrzf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...
ztzrzf_lwork: Final[Callable[[Incomplete, Incomplete], _Incomplete2]] = ...

# (x11, x12, x21, x22, [...]) -> cs11, cs12, cs21, cs22, theta, u1, u2, v1t, v2t, info
cuncsd: Final[Callable[..., _Incomplete10]] = ...
zuncsd: Final[Callable[..., _Incomplete10]] = ...

# (m, p, q) -> (work, rwork, info)
cuncsd_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete3]] = ...
zuncsd_lwork: Final[Callable[[Incomplete, Incomplete, Incomplete], _Incomplete3]] = ...

# (a, tau, [lo, hi, lwork, overwrite_a]) -> (ht, info)
cunghr: Final[Callable[..., _Incomplete2]] = ...
zunghr: Final[Callable[..., _Incomplete2]] = ...

# (n, [lo, hi]) -> (work, info)
cunghr_lwork: Final[Callable[..., _Incomplete2]] = ...
zunghr_lwork: Final[Callable[..., _Incomplete2]] = ...

# (a, tau, [lwork, overwrite_a]) -> (q, work, info)
cungqr: Final[Callable[..., _Incomplete3]] = ...
zungqr: Final[Callable[..., _Incomplete3]] = ...
cungrq: Final[Callable[..., _Incomplete3]] = ...
zungrq: Final[Callable[..., _Incomplete3]] = ...

# (side, trans, a, tau, c, lwork, [overwrite_c]) -> (cq, work, info)
cunmqr: Final[Callable[..., _Incomplete3]] = ...
zunmqr: Final[Callable[..., _Incomplete3]] = ...

# (a, tau, c, [side, trans, lwork, overwrite_c]) -> (cq, info)
cunmrz: Final[Callable[..., _Incomplete2]] = ...
zunmrz: Final[Callable[..., _Incomplete2]] = ...

# (m, n, [side, trans]) -> (work, info)
cunmrz_lwork: Final[Callable[..., _Incomplete2]] = ...
zunmrz_lwork: Final[Callable[..., _Incomplete2]] = ...

# () -> major, minor, patch
ilaver: Final[Callable[[], tuple[int, int, int]]] = ...
