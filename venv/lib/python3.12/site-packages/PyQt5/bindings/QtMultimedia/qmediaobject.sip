// qmediaobject.sip generated by MetaSIP
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QMediaObject : public QObject
{
%TypeHeaderCode
#include <qmediaobject.h>
%End

public:
    virtual ~QMediaObject();
    virtual bool isAvailable() const;
    virtual QMultimedia::AvailabilityStatus availability() const;
    virtual QMediaService *service() const;
    int notifyInterval() const;
    void setNotifyInterval(int milliSeconds);
    virtual bool bind(QObject *);
    virtual void unbind(QObject *);
    bool isMetaDataAvailable() const;
    QVariant metaData(const QString &key) const;
    QStringList availableMetaData() const;

signals:
    void notifyIntervalChanged(int milliSeconds);
    void metaDataAvailableChanged(bool available);
    void metaDataChanged();
    void metaDataChanged(const QString &key, const QVariant &value);
    void availabilityChanged(QMultimedia::AvailabilityStatus availability /Constrained/);
    void availabilityChanged(bool available);

protected:
    QMediaObject(QObject *parent /TransferThis/, QMediaService *service);
    void addPropertyWatch(const QByteArray &name);
    void removePropertyWatch(const QByteArray &name);
};
