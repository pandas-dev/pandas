// qabstractvideofilter.sip generated by MetaSIP
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_5_0 -)

class QVideoFilterRunnable
{
%TypeHeaderCode
#include <qabstractvideofilter.h>
%End

public:
    enum RunFlag
    {
        LastInChain,
    };

    typedef QFlags<QVideoFilterRunnable::RunFlag> RunFlags;
    virtual ~QVideoFilterRunnable() /ReleaseGIL/;
    virtual QVideoFrame run(QVideoFrame *input, const QVideoSurfaceFormat &surfaceFormat, QVideoFilterRunnable::RunFlags flags) = 0 /ReleaseGIL/;
};

%End
%If (Qt_5_5_0 -)
QFlags<QVideoFilterRunnable::RunFlag> operator|(QVideoFilterRunnable::RunFlag f1, QFlags<QVideoFilterRunnable::RunFlag> f2);
%End
%If (Qt_5_5_0 -)

class QAbstractVideoFilter : public QObject
{
%TypeHeaderCode
#include <qabstractvideofilter.h>
%End

public:
    explicit QAbstractVideoFilter(QObject *parent /TransferThis/ = 0);
    virtual ~QAbstractVideoFilter();
    bool isActive() const;
    virtual QVideoFilterRunnable *createFilterRunnable() = 0 /ReleaseGIL/;

signals:
    void activeChanged();
};

%End
