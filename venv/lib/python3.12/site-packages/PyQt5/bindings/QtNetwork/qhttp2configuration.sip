// qhttp2configuration.sip generated by MetaSIP
//
// This file is part of the QtNetwork Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_14_0 -)

class QHttp2Configuration
{
%TypeHeaderCode
#include <qhttp2configuration.h>
%End

public:
    QHttp2Configuration();
    QHttp2Configuration(const QHttp2Configuration &other);
    ~QHttp2Configuration();
    void setServerPushEnabled(bool enable);
    bool serverPushEnabled() const;
    void setHuffmanCompressionEnabled(bool enable);
    bool huffmanCompressionEnabled() const;
    bool setSessionReceiveWindowSize(unsigned int size);
    unsigned int sessionReceiveWindowSize() const;
    bool setStreamReceiveWindowSize(unsigned int size);
    unsigned int streamReceiveWindowSize() const;
    bool setMaxFrameSize(unsigned int size);
    unsigned int maxFrameSize() const;
    void swap(QHttp2Configuration &other /Constrained/);
};

%End
%If (Qt_5_14_0 -)
bool operator==(const QHttp2Configuration &lhs, const QHttp2Configuration &rhs);
%End
%If (Qt_5_14_0 -)
bool operator!=(const QHttp2Configuration &lhs, const QHttp2Configuration &rhs);
%End
