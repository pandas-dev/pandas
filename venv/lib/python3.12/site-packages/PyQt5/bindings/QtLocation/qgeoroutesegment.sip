// qgeoroutesegment.sip generated by MetaSIP
//
// This file is part of the QtLocation Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_5_0 -)

class QGeoRouteSegment
{
%TypeHeaderCode
#include <qgeoroutesegment.h>
%End

public:
    QGeoRouteSegment();
    QGeoRouteSegment(const QGeoRouteSegment &other);
    ~QGeoRouteSegment();
    bool operator==(const QGeoRouteSegment &other) const;
    bool operator!=(const QGeoRouteSegment &other) const;
    bool isValid() const;
    void setNextRouteSegment(const QGeoRouteSegment &routeSegment);
    QGeoRouteSegment nextRouteSegment() const;
    void setTravelTime(int secs);
    int travelTime() const;
    void setDistance(qreal distance);
    qreal distance() const;
    void setPath(const QList<QGeoCoordinate> &path);
    QList<QGeoCoordinate> path() const;
    void setManeuver(const QGeoManeuver &maneuver);
    QGeoManeuver maneuver() const;
%If (Qt_5_12_0 -)
    bool isLegLastSegment() const;
%End
};

%End
