// qplacecategory.sip generated by MetaSIP
//
// This file is part of the QtLocation Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_5_0 -)

class QPlaceCategory
{
%TypeHeaderCode
#include <qplacecategory.h>
%End

public:
    QPlaceCategory();
    QPlaceCategory(const QPlaceCategory &other);
    virtual ~QPlaceCategory();
    bool operator==(const QPlaceCategory &other) const;
    bool operator!=(const QPlaceCategory &other) const;
    QString categoryId() const;
    void setCategoryId(const QString &identifier);
    QString name() const;
    void setName(const QString &name);
    QLocation::Visibility visibility() const;
    void setVisibility(QLocation::Visibility visibility);
    QPlaceIcon icon() const;
    void setIcon(const QPlaceIcon &icon);
    bool isEmpty() const;
};

%End
