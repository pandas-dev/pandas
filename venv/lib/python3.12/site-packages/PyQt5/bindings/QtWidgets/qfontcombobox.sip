// qfontcombobox.sip generated by MetaSIP
//
// This file is part of the QtWidgets Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QFontComboBox : public QComboBox
{
%TypeHeaderCode
#include <qfontcombobox.h>
%End

public:
    enum FontFilter
    {
        AllFonts,
        ScalableFonts,
        NonScalableFonts,
        MonospacedFonts,
        ProportionalFonts,
    };

    QFontComboBox::FontFilters fontFilters() const;
    explicit QFontComboBox(QWidget *parent /TransferThis/ = 0);
    virtual ~QFontComboBox();
    void setWritingSystem(QFontDatabase::WritingSystem);
    QFontDatabase::WritingSystem writingSystem() const;
    typedef QFlags<QFontComboBox::FontFilter> FontFilters;
    void setFontFilters(QFontComboBox::FontFilters filters);
    QFont currentFont() const;
    virtual QSize sizeHint() const;

public slots:
    void setCurrentFont(const QFont &f);

signals:
    void currentFontChanged(const QFont &f);

protected:
    virtual bool event(QEvent *e);
};

QFlags<QFontComboBox::FontFilter> operator|(QFontComboBox::FontFilter f1, QFlags<QFontComboBox::FontFilter> f2);
