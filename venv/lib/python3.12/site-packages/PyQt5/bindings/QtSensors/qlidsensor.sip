// qlidsensor.sip generated by MetaSIP
//
// This file is part of the QtSensors Python extension module.
//
// Copyright (c) 2024 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_9_0 -)

class QLidReading : public QSensorReading /NoDefaultCtors/
{
%TypeHeaderCode
#include <qlidsensor.h>
%End

public:
    bool backLidClosed() const;
    void setBackLidClosed(bool closed);
    bool frontLidClosed() const;
    void setFrontLidClosed(bool closed);

signals:
    void backLidChanged(bool closed);
    void frontLidChanged(bool closed);
};

%End
%If (Qt_5_9_0 -)

class QLidFilter : public QSensorFilter
{
%TypeHeaderCode
#include <qlidsensor.h>
%End

public:
    virtual bool filter(QLidReading *reading) = 0;
};

%End
%If (Qt_5_9_0 -)

class QLidSensor : public QSensor
{
%TypeHeaderCode
#include <qlidsensor.h>
%End

public:
    explicit QLidSensor(QObject *parent /TransferThis/ = 0);
    virtual ~QLidSensor();
    QLidReading *reading() const;
};

%End
